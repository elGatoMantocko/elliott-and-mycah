# This is a basic workflow to help you get started with Actions

name: Build and Deploy

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read
  checks: write
  # we need to add pull-requests: write permission if we are going to open this for PRs
  # pull-requests: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: 📦 Build
    runs-on: ubuntu-latest
    steps:
      - name: 💍 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Setup nodejs and yarn
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"
          cache: "yarn"

      - name: 💿 Install yarn dependencies
        run: yarn install --immutable

      - name: 👖 Run lint
        run: yarn lint

      - name: 🧑‍⚖️ Audit licenses
        run: yarn auditLicenses

      - name: 🧪 Run yarn tests
        env:
          CI: "true"
        run: yarn test

      - name: 👀 Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test-results/**/*.xml
          # we don't need comment mode because this only runs on main for now
          comment_mode: off

      - name: 🕸 Build webapp bundle
        run: yarn build

      - name: 📤 Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: elliott-and-mycah-webapp-${{ github.sha }}
          path: dist

  deploy:
    name: 🚀 Deploy
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: 📥 Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: elliott-and-mycah-webapp-${{ github.sha }}
          path: dist

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 🚀 Copy app assets
        # copy everything _except_ index first
        # then copy the index file and make sure it has a no-cache cache control setting
        run: |
          aws s3 sync dist s3://${{ secrets.AWS_S3_BUCKET }} --acl public-read --follow-symlinks --delete --exclude "index.html"
          aws s3 sync dist s3://${{ secrets.AWS_S3_BUCKET }} --acl public-read --follow-symlinks --cache-control no-cache --exclude "*" --include "index.html"
