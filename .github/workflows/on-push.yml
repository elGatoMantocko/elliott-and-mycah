# This is a basic workflow to help you get started with Actions

name: Build and Deploy

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

permissions:
  id-token: write
  contents: read
  checks: write
  # we need to add pull-requests: write permission if we are going to open this for PRs
  # pull-requests: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [lint, auditLicenses, test, build]
    name: 📦 ${{ matrix.task }}
    steps:
      - name: 💍 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup nodejs and yarn
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: 💿 Install yarn dependencies
        run: yarn install --immutable

      - name: ⚙️ Run ${{ matrix.task }}
        env:
          CI: 'true'
        run: yarn ${{ matrix.task }}

      - name: 👀 Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always() && matrix.task == 'test'
        with:
          files: test-results/**/*.xml
          # we don't need comment mode because this only runs on main for now
          comment_mode: off

      - name: 📤 Upload build artifact
        if: matrix.task == 'build'
        uses: actions/upload-artifact@v4
        with:
          name: webapp-bundle-${{ github.sha }}
          path: dist

  deploy:
    name: 🚀 Deploy
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: 📥 Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: webapp-bundle-${{ github.sha }}
          path: dist

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 🚀 Copy app assets
        # copy everything _except_ index first
        # then copy the index file and make sure it has a no-cache cache control setting
        run: |
          aws s3 sync dist s3://${{ secrets.AWS_S3_BUCKET }} --acl public-read --follow-symlinks --delete --exclude "index.html"
          aws s3 sync dist s3://${{ secrets.AWS_S3_BUCKET }} --acl public-read --follow-symlinks --cache-control no-cache --exclude "*" --include "index.html"
